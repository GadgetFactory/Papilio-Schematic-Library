# Configuration for Open Bench Logic Sniffer profile

# The short (single word) type of the device described in this profile
device.type = OLS
# A longer description of the device
device.description = Open Bench Logic Sniffer
# The device interface, SERIAL only
device.interface = SERIAL
# The device's native clockspeed, in Hertz.
device.clockspeed = 100000000
# The clockspeed used in the divider calculation, in Hertz. Defaults to 100MHz as most devices appear to use this.
device.dividerClockspeed = 100000000
# Whether or not double-data-rate is supported by the device (also known as the "demux"-mode).
device.supports_ddr = true
# Supported sample rates in Hertz, separated by comma's
device.samplerates = 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000, 200000, 500000, 1000000, 2000000, 5000000, 10000000, 20000000, 50000000, 100000000 
# What capture clocks are supported
device.captureclock = INTERNAL, EXTERNAL_FALLING, EXTERNAL_RISING
# The supported capture sizes, in bytes
device.capturesizes = 64, 128, 256, 512, 1024, 2048, 3072, 4096, 5120, 6144, 12288, 24576
# Whether or not the noise filter is supported
device.feature.noisefilter = true
# Whether or not Run-Length encoding is supported
device.feature.rle = true
# Whether or not a testing mode is supported
device.feature.testmode = true
# Whether or not triggers are supported
device.feature.triggers = true
# The number of trigger stages
device.trigger.stages = 4
# Whether or not "complex" triggers are supported
device.trigger.complex = true

# The total number of channels usable for capturing
device.channel.count = 32
# The number of channels groups, together with the channel count determines the channels per group
device.channel.groups = 4
# Whether the capture size is limited by the enabled channel groups
device.capturesize.bound = true
# Which numbering does the device support
device.channel.numberingschemes = INSIDE, OUTSIDE

# Is a delay after opening the port and device detection needed? (0 = no delay, >0 = delay in milliseconds)
device.open.portdelay = 0
# The receive timeout for the device (in milliseconds, 100 = default, <=0 = no timeout)
device.receive.timeout = 100
# Does the device need a high or low DTR-line to operate correctly? (high = true, low = false)
device.open.portdtr = false
# Which metadata keys correspond to this device profile? Value is a comma-separated list of (double quoted) names...
device.metadata.keys = "*", "Open Logic Sniffer v1.01"

# In which order are samples sent back from the device? false = last sample first, true = first sample first
device.samples.reverseOrder = false

###EOF###
